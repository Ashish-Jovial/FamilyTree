// <auto-generated />
using System;
using Backend.FamilyTree;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.FamilyTree.Migrations
{
    [DbContext(typeof(FamilyTreeDbContext))]
    partial class FamilyTreeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.FamilyTree.Models.Family", b =>
                {
                    b.Property<Guid>("FamilyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovFamilyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HeadOfFamilyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentFamilyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SuperAdminID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FamilyID");

                    b.HasIndex("SuperAdminID");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.Request", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RequestId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("SuperAdminID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.SubFamily", b =>
                {
                    b.Property<Guid>("SubFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NestedFamilyFamilyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubFamilyId");

                    b.HasIndex("NestedFamilyFamilyID");

                    b.ToTable("SubFamily");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.SuperAdmin", b =>
                {
                    b.Property<Guid>("SuperAdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SuperAdminID");

                    b.ToTable("SuperAdmins");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AadharCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("AnnualIncome")
                        .HasColumnType("real");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FamilyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveFamily")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentIdCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoterCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("FamilyID");

                    b.HasIndex("SuperAdminID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.UserRoles", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleID");

                    b.HasIndex("SuperAdminID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.Family", b =>
                {
                    b.HasOne("Models.FamilyTree.Models.SuperAdmin", null)
                        .WithMany("Families")
                        .HasForeignKey("SuperAdminID");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.Request", b =>
                {
                    b.HasOne("Models.FamilyTree.Models.User", "Receiver")
                        .WithMany("ReceivedRequests")
                        .HasForeignKey("ReceiverId")
                        .IsRequired();

                    b.HasOne("Models.FamilyTree.Models.User", "Sender")
                        .WithMany("SentRequests")
                        .HasForeignKey("SenderId")
                        .IsRequired();

                    b.HasOne("Models.FamilyTree.Models.SuperAdmin", null)
                        .WithMany("Requests")
                        .HasForeignKey("SuperAdminID");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.SubFamily", b =>
                {
                    b.HasOne("Models.FamilyTree.Models.Family", "NestedFamily")
                        .WithMany("SubFamilies")
                        .HasForeignKey("NestedFamilyFamilyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NestedFamily");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.User", b =>
                {
                    b.HasOne("Models.FamilyTree.Models.Family", null)
                        .WithMany("Users")
                        .HasForeignKey("FamilyID");

                    b.HasOne("Models.FamilyTree.Models.SuperAdmin", null)
                        .WithMany("Users")
                        .HasForeignKey("SuperAdminID");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.UserRoles", b =>
                {
                    b.HasOne("Models.FamilyTree.Models.SuperAdmin", null)
                        .WithMany("Roles")
                        .HasForeignKey("SuperAdminID");

                    b.HasOne("Models.FamilyTree.Models.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.Family", b =>
                {
                    b.Navigation("SubFamilies");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.SuperAdmin", b =>
                {
                    b.Navigation("Families");

                    b.Navigation("Requests");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Models.FamilyTree.Models.User", b =>
                {
                    b.Navigation("ReceivedRequests");

                    b.Navigation("Roles");

                    b.Navigation("SentRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
